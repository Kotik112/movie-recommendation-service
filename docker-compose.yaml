version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: movie_rec_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ilrPwd123
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - movieworld-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  movie-service:
    image: thekotik/movie-service:latest
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:postgresql://postgres:5432/movie_rec_db
      DB_USER: postgres
      DB_PASSWD: ilrPwd123
    ports:
      - "8081:8081"
    networks:
      - movieworld-network
    command: [ "/bin/sh", "-c", "./wait-for-it.sh postgres:5432 -- java -jar app.jar" ]

  user-service:
    image: thekotik/user-service:latest
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:postgresql://postgres:5432/movie_rec_db
      DB_USER: postgres
      DB_PASSWD: ilrPwd123
      MOVIE_SERVICE_URL: http://movie-service:8081/api/v1/movies
    ports:
      - "8082:8082"
    networks:
      - movieworld-network
    command: ["/bin/sh", "-c", "./wait-for-it.sh postgres:5432 -- java -jar app.jar"]

  recommendation-service:
    image: thekotik/recommendation-service:latest
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:postgresql://postgres:5432/movie_rec_db
      DB_USER: postgres
      DB_PASSWD: ilrPwd123
      MOVIE_SERVICE_URL: http://movie-service:8081/api/v1/movies
      USER_SERVICE_URL: http://user-service:8082/api/v1/users
      USER_PROFILE_SERVICE_URL: http://user-service:8082/api/v1/user-profiles
    ports:
      - "8083:8083"
    networks:
      - movieworld-network
    command: [ "/bin/sh", "-c", "./wait-for-it.sh postgres:5432 -- java -jar app.jar" ]


networks:
  movieworld-network:
    driver: bridge